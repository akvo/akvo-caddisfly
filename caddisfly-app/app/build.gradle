apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.sentry.android.gradle'

android {
    compileSdkVersion 29
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "org.akvo.caddisfly"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 288
        versionName "1.0.15"
        resConfigs "en", "en_US", "fr", "in", "es"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"

    productFlavors {
        mainExt {
        }
        tryout {
            applicationIdSuffix ".tryout"
            versionName "Experimental"
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testBuildType "inspect"

    signingConfigs {
        caddisflyRelease {
            if (project.hasProperty('CADDISFLY_RELEASE_STORE_FILE')) {
                storeFile file(CADDISFLY_RELEASE_STORE_FILE)
                storePassword CADDISFLY_RELEASE_STORE_PASSWORD
                keyAlias CADDISFLY_RELEASE_KEY_ALIAS
                keyPassword CADDISFLY_RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        // NOTE: This variant is for running instrumented tests only
        inspect {
            // Takes screenshots during test {use ScreenshotSuite} (Requires Storage permission)
            buildConfigField "Boolean", "TAKE_SCREENSHOTS", "true"
            // Stops animations, ignores external sensors, skips bluetooth scans
            buildConfigField "Boolean", "TEST_RUNNING", "true"
            // The language to run the instrumented tests in
            buildConfigField "String", "TEST_LANGUAGE", "\"en\""

            debuggable = true
            signingConfig signingConfigs.debug
            resValue("bool", "FIREBASE_ANALYTICS_ENABLED", "false")
            buildConfigField "String", "SENTRY_DSN", "\"\""
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + 0L + ")"
        }
        debug {
            resValue("bool", "FIREBASE_ANALYTICS_ENABLED", "false")
            buildConfigField "String", "SENTRY_DSN", "\"\""
            buildConfigField "Boolean", "TEST_RUNNING", "false"
            buildConfigField "Boolean", "TAKE_SCREENSHOTS", "false"
            buildConfigField "String", "TEST_LANGUAGE", "\"\""
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" + 0L + ")"
        }
        release {
            if (project.hasProperty('CADDISFLY_RELEASE_STORE_FILE')) {
                signingConfig signingConfigs.caddisflyRelease
                buildConfigField "String", "SENTRY_DSN", "\"${CADDISFLY_SENTRY_DSN}\""
            } else {
                buildConfigField "String", "SENTRY_DSN", "\"\""
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            resValue("bool", "FIREBASE_ANALYTICS_ENABLED", "true")
            buildConfigField "Boolean", "TEST_RUNNING", "false"
            buildConfigField "Boolean", "TAKE_SCREENSHOTS", "false"
            buildConfigField "String", "TEST_LANGUAGE", "\"\""
            // Expiry date of apk. To prevent test builds from being used in production
            buildConfigField "java.util.Date", "BUILD_TIME", "new java.util.Date(" +
                    (System.currentTimeMillis()) + "L)"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "akvo-caddisfly-${variant.versionCode}.apk"
                }
            }
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            events "started", "skipped", "passed", "failed"
            showStandardStreams true
        }
    }
}

sentry {
    autoProguardConfig true
    autoUpload true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support
    implementation 'androidx.cardview:cardview:1.0.0'

    // Don't upgrade until https://issuetracker.google.com/issues/141869006 is fixed
    implementation 'androidx.appcompat:appcompat:1.0.2'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.android.play:core:1.6.4'

    // Math
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Usb
    implementation 'com.github.felHR85:UsbSerial:4.5.1'

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.2'

    // Dagger
    implementation 'com.google.dagger:dagger:2.25.3'
    kapt 'com.google.dagger:dagger-compiler:2.25.3'
    implementation 'com.google.dagger:dagger-android:2.25.3'
    kapt 'com.google.dagger:dagger-android-processor:2.25.3'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.25.3'

    // Sentry
    implementation 'io.sentry:sentry-android:1.7.29'

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'androidx.test:core:1.2.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation "androidx.test.ext:junit:1.1.1"

    // Espresso
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0-alpha03'
    androidTestImplementation('androidx.test.espresso:espresso-contrib:3.3.0-alpha03') {
        exclude group: 'com.android.support'
        exclude group: 'javax.inject'
    }

    // Robolectric
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation "com.github.nimbl3:robolectric.shadows-supportv4:4.1-SNAPSHOT"
    testImplementation 'androidx.test:rules:1.2.0'
    testImplementation "androidx.test.ext:junit:1.1.1"

    // UIAutomator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

}
apply plugin: 'com.google.gms.google-services'
